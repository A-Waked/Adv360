#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <150>;
            global-quick-tap;
            flavor = "balanced";
            hold-trigger-key-positions = <7 8 9 10 11 12 13 21 22 23 24 25 26 27 38 39 40 41 42 43 44 45 54 55 56 57 58 59 71 72 73 74 75 35 36 37 38 52 53 65 66 67 68 69 70 71>;
            hold-trigger-on-release;
        };
        cpy_pst: cpy_pst {
            compatible = "zmk,behavior-tap-dance";
            label = "CPY_PST";
            #binding-cells = <0>;
            bindings =
                <&kp LG(C)>,
                <&kp LG(V)>;

            tapping-term-ms = <125>;
        };
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            global-quick-tap;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 34 35 36 37 38 46 47 48 49 50 51 52 53 60 61 62 63 64 65 66 67 68 69 70>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LS(LC(LG(LEFT_ALT))) DEL  &mt EXCLAMATION NUMBER_1  &mt AT_SIGN NUMBER_2  &mt HASH NUMBER_3  &mt DOLLAR NUMBER_4         &mt PERCENT NUMBER_5        &kp F11                                                                                       &kp F12           &mt CARET NUMBER_6  &mt AMPERSAND NUMBER_7  &mt ASTERISK NUMBER_8  &mt LEFT_PARENTHESIS NUMBER_9  &mt RIGHT_PARENTHESIS NUMBER_0  &mt LS(LBKT) LBKT
                     &kp TAB                     &kp Q                 &kp W              &kp F                &kp P                        &kp B  &kp BACKSLASH                                                                             &kp LS(LA(MINUS))                        &kp J                   &kp L                  &kp U                          &kp Y                        &kp SEMI  &mt LS(RBKT) RBKT
                     &kp ESC              &hml LCTRL A       &hml LEFT_ALT R        &hml LGUI S        &hml LSHIFT T  &hml LS(LC(LG(LEFT_ALT))) G      &kp MINUS  &caps_word          &cpy_pst          &kp LS(LG(R))  &kp LS(LC(LEFT_ALT))          &kp EQUAL  &hmr LS(LC(LG(LEFT_ALT))) M      &hmr RIGHT_SHIFT N        &hmr LEFT_GUI E               &hmr RIGHT_ALT I                    &hmr LCTRL O           &kp BSPC
                   &kp LSHFT                     &kp Z                 &kp X              &kp C                &kp D                        &kp V                                   &kp C_PREV             &kp C_NEXT                                                                 &kp K                   &kp H    &mt LESS_THAN COMMA        &mt GREATER_THAN PERIOD               &mt QUESTION FSLH          &kp RSHFT
                       &mo 1                  &kp HOME             &kp PG_DN          &kp PG_UP              &kp END                                   &kp SPACE   &kp SPACE  &kp SINGLE_QUOTE      &kp DOUBLE_QUOTES             &kp ENTER      &kp BACKSPACE                                             &kp LEFT               &kp DOWN                         &kp UP                       &kp RIGHT    &mt TILDE GRAVE
            >;
        };

        layer_1 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                   &trans        &trans        &trans        &trans        &trans        &trans  &bootloader
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                   &trans        &trans        &trans        &trans        &trans        &trans       &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans      &trans       &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4       &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                                     &trans        &trans        &trans        &trans        &trans       &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &bl BL_TOG  &rgb_ug RGB_TOG                      &trans        &trans        &trans        &trans       &trans
            >;
        };
    };
};
